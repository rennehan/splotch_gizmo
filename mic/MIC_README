/*
 * Copyright (c) 2004-2014
 *              Tim Dykes University of Portsmouth
 *              Claudio Gheller ETH-CSCS
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

To contact: timothy.dykes@myport.ac.uk or cgheller@cscs.ch

To build modify the Makefile as necessary, examples can be found by searching for all references to DOMMIC

MPI assumes 1 rank per node
For multiple ranks within a node using the same device reduce CHUNK in mic_splotch.cc 
Likely to CHUNK/num_ranks

Threads can be grouped, using a seperate image buffer for each group and reducing at the end
May be useful (although maybe not if the image is very big)
For threadgrouping options use these parameters:

n_thread_groups=6
n_threads_per_group=40

Modifying number of groups and threads to suit. 
6/40 is good for Xeon Phi 5110p (59 cores in offload mode)


------Recommended Environment Variables------

export OFFLOAD_INIT=on_start
export MIC_ENV_PREFIX=MIC
export MIC_USE_2MB_BUFFERS=64K

To link MIC executable with library in working directory:
export MIC_LD_LIBRARY_PATH=$MIC_LD_LIBRARY_PATH:.

------Example scripts for DOMMIC at CSCS------

To run on multiple nodes:

#!/bin/bash
#SBATCH --nodes=6
#SBATCH --time=1:00:00
#SBATCH --ntasks-per-node=1

module load icc
module load impi

export OFFLOAD_INIT=on_start
export MIC_ENV_PREFIX=MIC
export MIC_USE_2MB_BUFFERS=64K
export MIC_LD_LIBRARY_PATH=$MIC_LD_LIBRARY_PATH:.

mpirun -np 6 /users/dykest/Code/Splotch/double_buffer/Splotch6-DMC-offload magnet.par

For 2 ranks each on two devices on single node:

#!/bin/bash
#SBATCH --nodes=1
#SBATCH --time=1:00:00
#SBATCH --ntasks-per-node=1

module load icc
module load impi

export OFFLOAD_INIT=on_start
export MIC_ENV_PREFIX=MIC
export MIC_USE_2MB_BUFFERS=64K
export MIC_LD_LIBRARY_PATH=$MIC_LD_LIBRARY_PATH:.

 mpirun  -np 1 -env 'MIC_OMP_NUM_THREADS=116' -env 'MIC_KMP_AFFINITY=explicit,granularity=fine,proclist=[1-116:1]' -env 'OFFLOAD_DEVICES=0' /path/to/exe optional_args : \
     	-np 1 -env 'MIC_OMP_NUM_THREADS=120' -env 'MIC_KMP_AFFINITY=explicit,granularity=fine,proclist=[117-236:1]' -env 'OFFLOAD_DEVICES=0'  /path/to/exe optional_args : \
 		-np 1 -env 'MIC_OMP_NUM_THREADS=116' -env 'MIC_KMP_AFFINITY=explicit,granularity=fine,proclist=[1-116:1]' -env 'OFFLOAD_DEVICES=1'  /path/to/exe optional_args : \
     	-np 1 -env 'MIC_OMP_NUM_THREADS=120' -env 'MIC_KMP_AFFINITY=explicit,granularity=fine,proclist=[117-236:1]' -env 'OFFLOAD_DEVICES=1'  /path/to/exe optional_args




